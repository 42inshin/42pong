
import { Injectable, CanActivate} from '@nestjs/common';
import { Observable } from 'rxjs';
/*
@Injectable()
export class WsGuard implements CanActivate {

  constructor(
    private userService: UsersService,
    private authService: AuthService,
    ) {}
  canActivate(
    context: any,
  ): boolean | any | Promise<boolean | any> | Observable<boolean | any> {
    const bearerToken = context.args[0].handshake.headers.authorization.split(' ')[1];
    try {
      const decoded = this.authService.jwtVerify(bearerToken) as any;
      return new Promise((resolve, reject) => {
        return this.userService.getUserById(decoded.userId).then(user => {
          if (user) {
            resolve(user);
          } else {
            reject(false);
          }
        });

      });
    } catch (ex) {
      console.log(ex);
      return false;
    }
  }
}
*/